#
# This workflow will package the Copilot Chat application for deployment.
#

name: copilot-chat-package

on:
  pull_request:
    branches: [ "main", "feature*", "sk-piplines" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check-for-copilot-chat-app-changes:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.filter.outputs.copilot-chat-app}}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          copilot-chat-app:
            - 'samples/apps/copilot-chat-app/**'
    - uses: actions/checkout@v3
    # run only if 'copilot-chat-app' files were changed
    - name: copilot-chat-app changes found
      if: steps.filter.outputs.copilot-chat-app == 'true'
      run: echo "copilot-chat-app file"
    # run only if not 'copilot-chat-app' files were changed
    - name: no copilot-chat-app changes found
      if: steps.filter.outputs.copilot-chat-app != 'true'
      run: echo "NOT copilot-chat-app file"

  build:
    strategy:
        fail-fast: false
        matrix:
          include:
          - { dotnet: '6.0', configuration: Release, os: ubuntu-latest }

    runs-on: ${{ matrix.os }}
    needs: check-for-copilot-chat-app-changes
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
    - uses: actions/checkout@v3
      with:
        clean: true
        
    - name: Pull container dotnet/sdk:${{ matrix.dotnet }}
      if: check-for-copilot-chat-app-changes.outputs.output1 == 'true'
      run: docker pull mcr.microsoft.com/dotnet/sdk:${{ matrix.dotnet }}

    - name: Package Copilot Chat WebAPI
      if: check-for-copilot-chat-app-changes.outputs.output1 == 'true'
      run: |
        chmod +x $(pwd)/samples/apps/copilot-chat-app/deploy/package-webapi.sh;
        docker run --rm -v $(pwd):/app -w /app -e GITHUB_ACTIONS='true' mcr.microsoft.com/dotnet/sdk:${{ matrix.dotnet }} /bin/sh -c "/app/samples/apps/copilot-chat-app/deploy/package-webapi.sh --no-zip";
  
    - name: Set version tag
      if: check-for-copilot-chat-app-changes.outputs.output1 == 'true'
      id: versiontag
      run: |
        VERSION_TAG="$(date +'%Y%m%d').${{ github.run_number }}.${{ github.run_attempt }}"
        echo $VERSION_TAG
        echo "versiontag=$VERSION_TAG" >> $GITHUB_OUTPUT

    - name: Upload package to artifacts
      if: check-for-copilot-chat-app-changes.outputs.output1 == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: copilotchat-webapi-${{ steps.versiontag.outputs.versiontag }}
        path: ./samples/apps/copilot-chat-app/deploy/publish
